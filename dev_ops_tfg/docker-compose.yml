version: "3.9"

services:

  influxdb:
    image: ${INFLUX_IMG}
    container_name: ${INFLUX_CONTAINER}
    hostname: ${INFLUX_CONTAINER}
    environment:
      - INFLUXD_REPORTING_DISABLED=true
      - INFLUXDB_DB=${INFLUX_DB_NAME}
      - INFLUXDB_ADMIN_USER="admin"
      - INFLUXDB_ADMIN_PASSWORD="admin"
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb

  grafana:
    depends_on:
      - influxdb
    image: ${GRAFANA_IMG}
    container_name: ${GRAFANA_CONTAINER}
    #environment:
     #- GF_SERVER_ROOT_URL=http://my.grafana.server/
     #- GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
     - '${GRAFANA_PORT}:${GRAFANA_PORT}'
    volumes:
     - grafana_data:/var/lib/grafana

  genesis:
    depends_on:
      - influxdb
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - PROBE_FOLDER
        - C_WORKDIR
    environment:
      - INFLUX_CONTAINER
      - INFLUX_DB_PORT
      - INFLUX_DB_NAME
      - C_WORKDIR
    image: ${BASE_IMG}
    volumes:
      - ./${PROBE_FOLDER}:${C_WORKDIR}

  clone:
    extends:
      service: genesis
    stdin_open: true 
    tty: true
    environment:
      - SERVICE_NAMES=${ASCIIART_SERVICE}
      - MICROSERVICE=${M_SERVICE_2}
    hostname: ${M_SERVICE_2}
    container_name: ${M_SERVICE_2}
    command: /bin/bash

  testgrafana:
    depends_on:
      - influxdb
    extends:
      service: genesis
    build:
    #  context: .
      dockerfile: ./DockerfileGrafanaTest
      args:
        - BASE_IMG
        - GRAFANA_IMG
    #     - PROBE_FOLDER
    #     #- EXEC_SCRIPT
    #     - C_WORKDIR
    # environment:
    #   - INFLUX_CONTAINER
    #   - INFLUX_DB_PORT
    #   - INFLUX_DB_NAME
    #   - SERVICE_NAMES=${GRAY_SCALE_SERVICE}
    #   - C_WORKDIR
    #image: ${GRAFANA_IMG}
    container_name: testgrafana
    ports:
     - '3001:${GRAFANA_PORT}'
    hostname: testgrafanita
    volumes:
     - grafana_data_test:/var/lib/grafana



  # frontend:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build: 
  #     context: ./${FRONTEND_WORKDIR}
  #     dockerfile: ./${FRONTEND_DOCKERFILE}
  #     args:
  #       - BASE_IMG
  #       - FLASK_C_WORKDIR=${FRONTEND_C_WORKDIR}
  #       - FLASK_EXEC_SCRIPT=${FRONTEND_EXEC_SCRIPT}
  #   image: ${FRONTEND_IMG}
  #   ports:
  #     - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  #   hostname: ${FRONTEND_SERVICE}
  #   container_name: ${FRONTEND_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}
  #     - PORT=${FRONTEND_PORT}


  #   volumes:
  #     - ./${FRONTEND_WORKDIR}:${FRONTEND_C_WORKDIR}
  
  # text_descriptor:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build:
  #     context: ./${TEXT_DESCRIPTOR_WORKDIR}
  #     dockerfile: ./${TEXT_DESCRIPTOR_DOCKERFILE}
  #     args:
  #       - BASE_IMG
  #       - FLASK_C_WORKDIR=${TEXT_DESCRIPTOR_C_WORKDIR}
  #       - FLASK_EXEC_SCRIPT=${TEXT_DESCRIPTOR_EXEC_SCRIPT}
  #   image: ${TEXT_DESCRIPTOR_IMG}
  #   ports:
  #     - "${TEXT_DESCRIPTOR_PORT}:${TEXT_DESCRIPTOR_PORT}"

  #   hostname: ${TEXT_DESCRIPTOR_SERVICE}
  #   container_name: ${TEXT_DESCRIPTOR_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}
  #     - PORT=${TEXT_DESCRIPTOR_PORT}

  #   volumes:
  #     - ./${TEXT_DESCRIPTOR_WORKDIR}:${TEXT_DESCRIPTOR_C_WORKDIR}

  # img_uploader:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build: 
  #     context: ./${FRONTEND_WORKDIR}
  #     dockerfile: ./Dockerfile_flask
  #     args:
  #       - BASE_IMG
  #       - FRONTEND_C_WORKDIR
  #       - FRONTEND_EXEC_SCRIPT
  #   image: ${FRONTEND_IMG}
  #   ports:
  #     - "${IMG_UPLOADER_PORT}:${IMG_UPLOADER_PORT}"

  #   hostname: ${FRONTEND_SERVICE}
  #   container_name: ${FRONTEND_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}

  #   volumes:
  #     - ./${FRONTEND_WORKDIR}:${FRONTEND_C_WORKDIR}


volumes:
  influxdb_data:
  grafana_data:
  grafana_data_test:

