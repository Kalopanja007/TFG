version: "3.9"

services:

  influxdb:
    image: ${INFLUX_IMG}
    container_name: ${INFLUX_CONTAINER}
    hostname: ${INFLUX_CONTAINER}
    environment:
      - INFLUXD_REPORTING_DISABLED=true
      - INFLUXDB_DB=${INFLUX_DB_NAME}
      - INFLUXDB_ADMIN_USER="admin"
      - INFLUXDB_ADMIN_PASSWORD="admin"
    # ports:  # Redirection is not necessary
    #   - '${INFLUX_DB_PORT}:${INFLUX_DB_PORT}'
    volumes:
      - influxdb_data:/var/lib/influxdb

  # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
  grafana:
    depends_on:
      - influxdb
    image: ${GRAFANA_IMG}
    container_name: ${GRAFANA_CONTAINER}
    #environment:
     #- GF_SERVER_ROOT_URL=http://my.grafana.server/
     #- GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '${GRAFANA_PORT}:${GRAFANA_PORT}'
    volumes:
      - grafana_data:/var/lib/grafana

  # For testing provisioning
  # grafana2:
  #   depends_on:
  #     - influxdb
  #   image: ${GRAFANA_IMG}
  #   container_name: grafana_prueba_cont
  #   environment:
  #    #- GF_SERVER_ROOT_URL=http://my.grafana.server/
  #    #- GF_INSTALL_PLUGINS=grafana-clock-panel
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning  # Default value, but to ensure ir
  #     #- GF_AUTH_DISABLE_LOGIN_FORM=true
  #     #- GF_AUTH_ANONYMOUS_ENABLED=true
  #     #- GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   ports:
  #    - '3001:${GRAFANA_PORT}'
  #   volumes:
  #     #- grafana_data_test:/var/lib/grafana
  #     # Doc: https://grafana.com/docs/grafana/latest/administration/provisioning/#dashboards
  #     #- ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
  #     #- ./grafana/dashboards:/var/lib/grafana/dashboards
  #     - ./grafana/provisioning:/etc/grafana/provisioning



  genesis:
    depends_on:
      - influxdb
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - PROBE_FOLDER
        - C_WORKDIR
    environment:
      - INFLUX_CONTAINER
      - INFLUX_DB_PORT
      - INFLUX_DB_NAME
      - C_WORKDIR
    image: ${BASE_IMG}
    volumes:
      - ./${PROBE_FOLDER}:${C_WORKDIR}

  MServ_1:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN,ASCII_ART,GRAY_SCALE
      - MICROSERVICE=Frontend
    hostname: Frontend
    container_name: Frontend
    command: /bin/bash

  MServ_2:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN
      - MICROSERVICE=TextDescriptor
    hostname: TextDescriptor
    container_name: TextDescriptor
    command: /bin/bash

  MServ_3:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN
      - MICROSERVICE=APICaller
    hostname: APICaller
    container_name: APICaller
    command: /bin/bash

  MServ_4:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN,ASCII_ART,GRAY_SCALE
      - MICROSERVICE=ShowData
    hostname: ShowData
    container_name: ShowData
    command: /bin/bash

  MServ_5:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=ASCII_ART,GRAY_SCALE
      - MICROSERVICE=ImgUploader
    hostname: ImgUploader
    container_name: ImgUploader
    command: /bin/bash

  MServ_6:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=ASCII_ART
      - MICROSERVICE=ASCIIArt
    hostname: ASCIIArt
    container_name: ASCIIArt
    command: /bin/bash

  MServ_7:
    extends:
      service: genesis
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=GRAY_SCALE
      - MICROSERVICE=GrayScale
    hostname: GrayScale
    container_name: GrayScale
    command: /bin/bash




  # testgrafana:
  #   depends_on:
  #     - influxdb
  #   extends:
  #     service: genesis
  #   build:
  #   #  context: .
  #     dockerfile: ./DockerfileGrafanaTest
  #     args:
  #       - BASE_IMG
  #       - GRAFANA_IMG
  #   #     - PROBE_FOLDER
  #   #     #- EXEC_SCRIPT
  #   #     - C_WORKDIR
  #   # environment:
  #   #   - INFLUX_CONTAINER
  #   #   - INFLUX_DB_PORT
  #   #   - INFLUX_DB_NAME
  #   #   - SERVICE_NAMES=${GRAY_SCALE_SERVICE}
  #   #   - C_WORKDIR
  #   #image: ${GRAFANA_IMG}
  #   container_name: testgrafana
  #   ports:
  #    - '3001:${GRAFANA_PORT}'
  #   hostname: testgrafanita
  #   volumes:
  #    - grafana_data_test:/var/lib/grafana



  # frontend:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build: 
  #     context: ./${FRONTEND_WORKDIR}
  #     dockerfile: ./${FRONTEND_DOCKERFILE}
  #     args:
  #       - BASE_IMG
  #       - FLASK_C_WORKDIR=${FRONTEND_C_WORKDIR}
  #       - FLASK_EXEC_SCRIPT=${FRONTEND_EXEC_SCRIPT}
  #   image: ${FRONTEND_IMG}
  #   ports:
  #     - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  #   hostname: ${FRONTEND_SERVICE}
  #   container_name: ${FRONTEND_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}
  #     - PORT=${FRONTEND_PORT}


  #   volumes:
  #     - ./${FRONTEND_WORKDIR}:${FRONTEND_C_WORKDIR}
  
  # text_descriptor:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build:
  #     context: ./${TEXT_DESCRIPTOR_WORKDIR}
  #     dockerfile: ./${TEXT_DESCRIPTOR_DOCKERFILE}
  #     args:
  #       - BASE_IMG
  #       - FLASK_C_WORKDIR=${TEXT_DESCRIPTOR_C_WORKDIR}
  #       - FLASK_EXEC_SCRIPT=${TEXT_DESCRIPTOR_EXEC_SCRIPT}
  #   image: ${TEXT_DESCRIPTOR_IMG}
  #   ports:
  #     - "${TEXT_DESCRIPTOR_PORT}:${TEXT_DESCRIPTOR_PORT}"

  #   hostname: ${TEXT_DESCRIPTOR_SERVICE}
  #   container_name: ${TEXT_DESCRIPTOR_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}
  #     - PORT=${TEXT_DESCRIPTOR_PORT}

  #   volumes:
  #     - ./${TEXT_DESCRIPTOR_WORKDIR}:${TEXT_DESCRIPTOR_C_WORKDIR}

  # img_uploader:
  #   depends_on:
  #     - genesis
  #   extends:
  #     service: genesis

  #   build: 
  #     context: ./${FRONTEND_WORKDIR}
  #     dockerfile: ./Dockerfile_flask
  #     args:
  #       - BASE_IMG
  #       - FRONTEND_C_WORKDIR
  #       - FRONTEND_EXEC_SCRIPT
  #   image: ${FRONTEND_IMG}
  #   ports:
  #     - "${IMG_UPLOADER_PORT}:${IMG_UPLOADER_PORT}"

  #   hostname: ${FRONTEND_SERVICE}
  #   container_name: ${FRONTEND_SERVICE}

  #   environment:
  #     - SERVICE_NAMES=${IMG_GEN_SERVICE}

  #   volumes:
  #     - ./${FRONTEND_WORKDIR}:${FRONTEND_C_WORKDIR}


volumes:
  influxdb_data:
  grafana_data:
  # grafana_data_test: