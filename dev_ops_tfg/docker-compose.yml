version: "3.9"

services:

  influxdb:
    build:
      dockerfile: "DockerfileInfluxdb"
      target: influx_tgt
      args:
        - INFLUX_IMG
    image: influx_img
    container_name: ${INFLUX_CONTAINER}
    stdin_open: true
    tty: true
    hostname: ${INFLUX_CONTAINER}
    environment:
      - INFLUXD_REPORTING_DISABLED=true
      - INFLUXDB_DB=${INFLUX_DB_NAME}
      - INFLUXDB_ADMIN_USER="admin"
      - INFLUXDB_ADMIN_PASSWORD="admin"
    volumes:
      - influxdb_data:/var/lib/influxdb

  # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
  grafana:
    depends_on:
      - influxdb
    image: ${GRAFANA_IMG}
    container_name: ${GRAFANA_CONTAINER}
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning  # Default value, but to ensure it
    ports:
      - '${GRAFANA_PORT}:${GRAFANA_PORT}'
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning


  microservicetemplate:
    depends_on:
      - influxdb
    build:
      context: .
      target: ffmpeg_tgt
      #dockerfile: ./Dockerfile # By default, this is the used dockerfile
      args:
        - PROBE_FOLDER
        - C_WORKDIR
    environment:
      - INFLUX_CONTAINER
      - INFLUX_DB_NAME
      - C_WORKDIR
    image: ffmpeg_img
    volumes:
      - ./${PROBE_FOLDER}:${C_WORKDIR}

  MServ_1:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN,ASCII_ART,GRAY_SCALE
      - MICROSERVICE=Frontend
    hostname: Frontend
    container_name: Frontend

  MServ_2:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN
      - MICROSERVICE=TextDescriptor
    hostname: TextDescriptor
    container_name: TextDescriptor

  MServ_3:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN
      - MICROSERVICE=APICaller
    hostname: APICaller
    container_name: APICaller

  MServ_4:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=IMG_GEN,ASCII_ART,GRAY_SCALE
      - MICROSERVICE=Showdata
    hostname: Showdata
    container_name: Showdata

  MServ_5:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=ASCII_ART,GRAY_SCALE
      - MICROSERVICE=ImgUploader
    hostname: ImgUploader
    container_name: ImgUploader

  MServ_6:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=ASCII_ART
      - MICROSERVICE=ASCIIArt
    hostname: ASCIIArt
    container_name: ASCIIArt

  MServ_7:
    extends:
      service: microservicetemplate
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=GRAY_SCALE
      - MICROSERVICE=GrayScale
    hostname: GrayScale
    container_name: GrayScale

  videosrv:
    extends:
      service: microservicetemplate
    build:
      target: videosrv_tgt
    image: videosrv_img
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=GRAY_SCALE
      - MICROSERVICE=VideoSrv
    hostname: VideoSrv
    container_name: VideoSrv

  ffmpeg:
    extends:
      service: microservicetemplate
    depends_on:
      - videosrv
    build:
      target: ffmpeg_tgt
    image: ffmpeg_img
    stdin_open: true
    tty: true
    environment:
      - SERVICE_NAMES=GRAY_SCALE
      - MICROSERVICE=FFmpeg
    hostname: FFmpeg
    container_name: FFmpeg

volumes:
  influxdb_data:
